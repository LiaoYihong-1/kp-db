{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x1761\\\\Desktop\\\\refactoring\\\\demo_front\\\\my-app\\\\src\\\\components\\\\main\\\\mainReport.jsx\",\n    _s = $RefreshSig$();\n\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nfunction BasicTable() {\n  _s();\n\n  const classes = useStyles();\n  const [gotten, setGotten] = useState(false);\n\n  function getProblems() {\n    $.ajax({\n      url: \"api/getproblems\",\n      method: \"POST\",\n      data: {\n        id: window.sessionStorage.getItem(\"id\")\n      },\n      async: false,\n      success: function (res) {\n        if (res.length > 0) {\n          rows.length = 0;\n\n          for (var i in res) {\n            if (res.is_finished) {\n              rows.push({\n                problem_id: res[i].id,\n                support: res[i].support_man_id,\n                problem_type: res[i].problem_type,\n                description: res[i].description,\n                date: res[i].date,\n                finished: \"finished\"\n              });\n            } else {\n              rows.push({\n                problem_id: res[i].id,\n                support: res[i].support_man_id,\n                problem_type: res[i].problem_type,\n                description: res[i].description,\n                date: res[i].date,\n                finished: \"on process\"\n              });\n            }\n          }\n\n          setGotten(true);\n        }\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (!gotten) {\n      getProblems();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Problem id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Support id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Problem type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.problem_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.support\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.problem_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.finished\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BasicTable, \"yq9rGosIWWnCKpa/ocfxRjZU3iQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\nexport default function MainReport() {\n  return /*#__PURE__*/_jsxDEV(BasicTable, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_c2 = MainReport;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BasicTable\");\n$RefreshReg$(_c2, \"MainReport\");","map":{"version":3,"sources":["C:/Users/x1761/Desktop/refactoring/demo_front/my-app/src/components/main/mainReport.jsx"],"names":["Typography","React","useEffect","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","$","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","BasicTable","classes","gotten","setGotten","getProblems","ajax","url","method","data","id","window","sessionStorage","getItem","async","success","res","length","i","is_finished","push","problem_id","support","support_man_id","problem_type","description","date","finished","map","row","MainReport"],"mappings":"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","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport $ from \"jquery\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction BasicTable() {\r\n    const classes = useStyles();\r\n    const [gotten,setGotten] = useState(false);\r\n    function getProblems(){\r\n        $.ajax({\r\n                url: \"api/getproblems\",\r\n                method:\"POST\",\r\n                data:{\r\n                    id:window.sessionStorage.getItem(\"id\")\r\n                },\r\n                async:false,\r\n                success:function (res){\r\n                    if(res.length > 0){\r\n                        rows.length = 0;\r\n                        for(var i in res){\r\n                            if(res.is_finished) {\r\n                                rows.push({\r\n                                    problem_id: res[i].id,\r\n                                    support: res[i].support_man_id,\r\n                                    problem_type: res[i].problem_type,\r\n                                    description: res[i].description,\r\n                                    date: res[i].date,\r\n                                    finished: \"finished\"\r\n                                })\r\n                            }else{\r\n                                rows.push({\r\n                                    problem_id: res[i].id,\r\n                                    support: res[i].support_man_id,\r\n                                    problem_type: res[i].problem_type,\r\n                                    description: res[i].description,\r\n                                    date: res[i].date,\r\n                                    finished: \"on process\"\r\n                                })\r\n                            }\r\n                        }\r\n                        setGotten(true);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!gotten){\r\n            getProblems()\r\n        }\r\n    });\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Problem id</TableCell>\r\n                        <TableCell align=\"right\">description</TableCell>\r\n                        <TableCell align=\"right\">Date</TableCell>\r\n                        <TableCell align=\"right\">Support id</TableCell>\r\n                        <TableCell align=\"right\">Problem type</TableCell>\r\n                        <TableCell align=\"right\">status</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.problem_id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.description}</TableCell>\r\n                            <TableCell align=\"right\">{row.date}</TableCell>\r\n                            <TableCell align=\"right\">{row.support}</TableCell>\r\n                            <TableCell align=\"right\">{row.problem_type}</TableCell>\r\n                            <TableCell align=\"right\">{row.finished}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default function MainReport(){\r\n    return(\r\n        <BasicTable/>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}